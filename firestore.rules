rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  	function isTextValid(text) {
    	return text.replace("^\\s*$", '').size() > 0;
    }

    function isValidAuthor(author) {
      return isTextValid(author) && author.size() <= 20;
    }

    function isValidMessage(message) {
      return isTextValid(message) && message.size() <= 250;
    }

    function isValidColor(color) {
      return color in ['yellow', 'blue', 'red', 'violet', 'green', 'pink'];
    }
    
    match /{document=**} {
      allow read, write: if false;
    }
 
    match /thoughts/{thoughtId} {
      allow read: if true;
      allow write: if request.resource.data.keys().hasAll(['author', 'lowerCaseAuthor', 'message', 'color', 'createdAt']) &&
        isValidAuthor(request.resource.data.author) &&
        request.resource.data.lowerCaseAuthor is string &&
        isValidMessage(request.resource.data.message) &&
        isValidColor(request.resource.data.color) &&
        request.resource.data.createdAt is timestamp;
    }
  }
}